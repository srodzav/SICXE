using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using Antlr4.Runtime;
using System.IO;

namespace SICXE
{
    public enum Instrucciones
    { // Valor CodOp en DECIMAL
        ADD = 24, AND = 80, COMP = 40, DIV = 36, J = 60, JEQ = 48, JGT = 52,
        JLT = 56, JSUB = 72, LDA = 00, LDCH = 50, LDL = 08, LDX = 04,
        MUL = 32, OR = 68, RD = 216, RSUB = 76, STA = 12, STCH = 84, STL = 20,
        STSW = 232, STX = 16, SUB = 28, TD = 224, TIX = 44, WD = 220
    }

    public enum Directivas
    { // Directivas
        START, END, BYTE, WORD, RESB, RESW
    }

    public partial class Form1 : Form
    {
        public List<string> Instr1 = new List<string>
        { // Formato 1
            "FIX", "FLOAT", "HIO", "NORM", "SIO", "TIO"
        };

        public List<string> Instr2 = new List<string>
        { // Formato 2
            "ADDR", "CLEAR", "COMPR", "DIVR", "MULR", "RMO", "SHIFTL", "SHIFTR", "SUBR", "SVC", "TIXR"
        };

        public List<string> Instr3 = new List<string>
        { // Formato 3
            "ADD", "ADDF", "AND", "COMP", "COMPF", "DIV", "DIVF", "J", "JEQ", "JGT", "JLT",
            "JSUB", "LDA", "LDB", "LDCH", "LDF", "LDL", "LDS", "LDT", "LDX", "LPS",
            "MUL", "MULF", "OR", "RD", "RSUB", "SSK", "STA", "STB", "STCH", "STF", "STI",
            "STL", "STS", "STSW", "STT", "STX", "SUB", "SUBF", "TD", "TIX", "WD"
        };
        private bool SICXE;
        public string nombre, ruta;
        private Programa prog;
        private int LongPrograma;

        public Form1()
        {
            InitializeComponent();
        }

        private void EstablecerBotonesArchivo(bool nuevo, bool abrir, bool guardar, bool guardarComo, bool cerrar, bool salir)
        {
            nuevoToolStripMenuItem.Enabled = nuevo;
            abrirToolStripMenuItem.Enabled = abrir;
            guardarToolStripMenuItem.Enabled = guardar;
            guardarComoToolStripMenuItem.Enabled = guardarComo;
            cerrarToolStripMenuItem.Enabled = cerrar;
            salirToolStripMenuItem.Enabled = salir;
        }

        private void abrirToolStripMenuItem_Click(object sender, EventArgs e)
        { // Abre un archivo en formato .S
            OpenFileDialog open = new OpenFileDialog
            {
                InitialDirectory = Application.StartupPath,
                Filter = "Archivo SIC|*.s"
            };
            if (open.ShowDialog() == DialogResult.OK)
            {
                ruta = Directory.GetParent(open.FileName).ToString();
                tbPrograma.Lines = File.ReadAllLines(open.FileName);
                if (open.FileName.EndsWith(".s"))
                {
                    SICXE = false;
                }
                //else if (open.FileName.EndsWith(".x"))
                //{
                //    SICXE = true;
                //}
                string[] files = open.FileName.Split((char)92);
                string[] file = files[files.Length - 1].Split('.');
                nombre = file[0]; // Se guarda el nombre del archivo
                tbPrograma_TextChanged(this, null); // Se carga en el textbox 
                //DireccionArchivo.Text = open.FileName;

                EstablecerBotonesArchivo(true, true, true, true, true, true);
                //EstablecerBotonesEnsamblador(true, false, false);
                //EstablecerBotonesEjecutar(true, false);
                tbPrograma.Enabled = true;

                prog = new Programa();
                // Se resetean el Archivo Intermedio, el TabSim y los Errores
                intermedio.Rows.Clear();
                dataGridTabSim.Rows.Clear();
                tbErrores.Clear();
                //tbRegistros.Clear();
                //textBoxRes.BackColor = Color.White;
                //textBoxRes.Text = "";
            }
        }

        private void tbPrograma_TextChanged(object sender, EventArgs e)
        {
            tbLinea.Text = "";
            int cont = 1;
            foreach (string line in tbPrograma.Lines)
            { // Se carga el programa
                tbLinea.Text += cont.ToString() + string.Format(Environment.NewLine);
                cont++;
            }
        }

        private void analizarCódigoToolStripMenuItem_Click(object sender, EventArgs e)
        {
            if (tbPrograma.Text != "")
            {
                int cont = 1;
                bool correcto = true;
                List<string> results = new List<string>();
                tbErrores.Clear();
                prog.lineas.Clear();
                foreach (string line in tbPrograma.Lines)
                {
                    if (line != "")
                    {
                        Linea linea = new Linea(line);
                        prog.lineas.Add(linea);
                        GramaticaLexer lex = new GramaticaLexer(new AntlrInputStream(line + Environment.NewLine));
                        CommonTokenStream tokens = new CommonTokenStream(lex);
                        GramaticaParser parser = new GramaticaParser(tokens);
                        try
                        {
                            parser.prog();
                            if (parser.NumberOfSyntaxErrors != 0)
                            {
                                results.Add("Error linea " + (cont).ToString());
                                correcto = false;
                                prog.lineas[prog.lineas.Count - 1].Error = true;
                            }
                        }
                        catch (Exception ex)
                        {
                            MessageBox.Show(ex.ToString());
                            throw;
                        }
                        cont++;
                        tbPrograma.DeselectAll();
                    }
                }
                if (correcto)
                {
                    //textBoxRes.BackColor = Color.Green;
                    //textBoxRes.Text = "LISTO";
                }
                else
                {
                    //textBoxRes.BackColor = Color.Red;
                    //textBoxRes.ForeColor = Color.White;
                    //textBoxRes.Text = "ERROR";
                    tbErrores.Lines = results.ToArray();
                }
                //EstablecerBotonesEnsamblador(true, true, false);
                if (SICXE)
                    File.WriteAllLines(ruta + @"\" + nombre + ".tx", tbErrores.Lines);
                else
                    File.WriteAllLines(ruta + @"\" + nombre + ".ts", tbErrores.Lines);
                //tbRegistros.Clear();
                intermedio.Rows.Clear();
                dataGridTabSim.Rows.Clear();

            }
            else
            {
                MessageBox.Show("Carga un programa");
            }
        }

        private void generarArchivoIntermedioToolStripMenuItem_Click(object sender, EventArgs e)
        {
            intermedio.RowHeadersWidth = 60;
            dataGridTabSim.Rows.Clear();
            intermedio.Rows.Clear();
            int contador = prog.lineas[0].Operando.ToDec();
            string hexCont = "";
            for (int i = 0; i < prog.lineas.Count; i++)
            {
                hexCont = contador.ToHex();
                string valor = prog.lineas[i].Operando;
                intermedio.Rows.Add(hexCont, prog.lineas[i].Etiqueta, prog.lineas[i].CodigoOp, valor);
                bool Repetido = false;
                foreach (DataGridViewRow row in dataGridTabSim.Rows)
                {
                    if (row.Cells[0].Value.ToString() == prog.lineas[i].Etiqueta)
                    {
                        Repetido = true;
                        break;
                    }
                }
                if (prog.lineas[i].Etiqueta != "" && i != 0 && !Repetido && EsEtiquetaValida(prog.lineas[i].Etiqueta))
                {
                    dataGridTabSim.Rows.Add(prog.lineas[i].Etiqueta, hexCont.Substring(2));
                }

                intermedio.Rows[i].HeaderCell.Value = (i + 1).ToString();
                if (!prog.lineas[i].Error)
                {
                    if (prog.lineas[i].CodigoOp == "RESW")
                    {
                        contador += prog.lineas[i].Operando.ToDec() * 3;
                    }
                    else
                    {
                        if (prog.lineas[i].CodigoOp == "RESB")
                        {
                            contador += prog.lineas[i].Operando.ToDec();
                        }
                        else
                        {
                            if (prog.lineas[i].CodigoOp == "BYTE")
                            {
                                if (prog.lineas[i].Operando.StartsWith("X'") && prog.lineas[i].Operando.EndsWith("'"))
                                {
                                    //contador += int.Parse(Math.Round((decimal)(prog.lineas[i].Operando.Length - 3) / 2, 0).ToString(), System.Globalization.NumberStyles.HexNumber);
                                    contador += (prog.lineas[i].Operando.Length - 3) / 2;
                                }
                                if (prog.lineas[i].Operando.StartsWith("C'") && prog.lineas[i].Operando.EndsWith("'"))
                                {
                                    //contador += int.Parse((prog.lineas[i].Operando.Length - 3).ToString(), System.Globalization.NumberStyles.HexNumber);
                                    contador += prog.lineas[i].Operando.Length - 3;
                                }
                            }
                            else
                            {
                                if (i == 0)
                                {
                                    continue;
                                }
                                if (!SICXE)
                                    contador += 3;
                                else
                                {
                                    if (Instr1.Contains(prog.lineas[i].CodigoOp))
                                    {
                                        contador += 1;
                                    }
                                    else if (Instr2.Contains(prog.lineas[i].CodigoOp))
                                    {
                                        contador += 2;
                                    }
                                    else if (Instr3.Contains(prog.lineas[i].CodigoOp))
                                    {
                                        contador += 3;
                                    }
                                    else if (prog.lineas[i].CodigoOp.Contains("+"))
                                    {
                                        string Codigo = prog.lineas[i].CodigoOp.Substring(1);
                                        if (Instr3.Contains(Codigo))
                                            contador += 4;
                                    }
                                }
                            }
                        }
                    }
                }
            }
            LongPrograma = hexCont.ToDec() - intermedio.Value(0, 0).ToDec();
            LongPrograma = hexCont.ToDec() - intermedio[0, 0].Value.ToString().ToDec();
            LongitudPrograma.Text = "Total: " + LongPrograma.ToHex() + " H";
            //EstablecerBotonesEnsamblador(true, true, true);
        }

        private void nuevoToolStripMenuItem_Click(object sender, EventArgs e)
        {
            tbPrograma.Text = "";
            tbLinea.Text = "";
            tbErrores.Text = "";
            nombre = "";
            ActiveForm.Text = "SIC";
            //DireccionArchivo.Text = "";
            LongitudPrograma.Text = "";

            EstablecerBotonesArchivo(true, true, true, true, true, true);
            //EstablecerBotonesEnsamblador(true, false, false);
            //EstablecerBotonesEjecutar(false, false);
            tbPrograma.Enabled = true;

            prog = new Programa();
            intermedio.Rows.Clear();
            dataGridTabSim.Rows.Clear();
            tbErrores.Clear();
            //tbRegistros.Clear();
            //textBoxRes.BackColor = Color.White;
            //textBoxRes.Text = "";
        }

        private bool EsEtiquetaValida(string etiqueta)
        {
            bool valido = true;
            valido = !Enum.IsDefined(typeof(Instrucciones), etiqueta);
            valido = !Enum.IsDefined(typeof(Directivas), etiqueta);
            return valido;
        }

    }
}
